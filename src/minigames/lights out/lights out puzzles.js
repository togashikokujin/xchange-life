var puzzle = function(number, top, middle, bottom) {
  return [number + "", [...(top + middle + bottom)].map(c => c == ' ' ? 1 : -1)];
}

window.GE.puzzle_database = toMap({
  "2": new Map([
    puzzle(1,
      ' * ',
      ' * ',
      '*  '),
    puzzle(2,
      '** ',
      '* *',
      ' **'),
    puzzle(3,
      '  *',
      '** ',
      ' * '),
    puzzle(4,
      ' * ',
      '  *',
      ' **'),
    puzzle(5,
      '* *',
      '* *',
      '* *'),
    puzzle(6,
      ' * ',
      '* *',
      '* *')
  ]) ,
  "3": new Map([
    puzzle(7,
      ' * ',
      '  *',
      ' **'),
    puzzle(8,
      ' **',
      '   ',
      '* *'),
    puzzle(9,
      ' * ',
      '  *',
      ' **'),
    puzzle(10,
      '** ',
      '  *',
      '* *'),
    puzzle(11,
      '** ',
      ' **',
      '  *'),
    puzzle(12,
      '*  ',
      '***',
      '*  '),
    puzzle(13,
      '* *',
      '***',
      '***'),
    puzzle(14,
      '** ',
      '* *',
      '***'),
    puzzle(15,
      '* *',
      '***',
      '* *'),
    puzzle(16,
      '*  ',
      '* *',
      '   '),
    puzzle(17,
      '* *',
      '  *',
      '*  '),
    puzzle(18,
      ' **',
      '***',
      '  *'),
    puzzle(19,
      '* *',
      '   ',
      '  *'),
    puzzle(20,
      '  *',
      '*  ',
      '***'),
    puzzle(21,
      '  *',
      '*  ',
      '***')
  ]),
  "4": new Map([
    puzzle(22,
      ' **',
      '* *',
      ' **'),
    puzzle(23,
      '  *',
      '* *',
      '*  '),
    puzzle(24,
      '   ',
      '*  ',
      '* *'),
    puzzle(25,
      ' * ',
      ' * ',
      '** '),
    puzzle(26,
      '  *',
      '** ',
      '***'),
    puzzle(27,
      '** ',
      '** ',
      ' * '),
    puzzle(28,
      '***',
      '*  ',
      '* *'),
    puzzle(29,
      '***',
      '*  ',
      '* *'),
    puzzle(30,
      '***',
      '   ',
      '   '),
    puzzle(31,
      '***',
      '   ',
      '* *'),
    puzzle(32,
      '* *',
      '  *',
      '***'),
    puzzle(33,
      '* *',
      ' * ',
      '*  '),
    puzzle(34,
      '   ',
      '   ',
      '* *'),
    puzzle(35,
      '  *',
      '   ',
      ' **'),
    puzzle(36,
      '***',
      ' * ',
      '*  '),
    puzzle(37,
      '  *',
      ' **',
      '* *'),
    puzzle(38,
      ' **',
      '  *',
      '** '),
    puzzle(39,
      ' **',
      ' **',
      '* *'),
    puzzle(40,
      '***',
      '** ',
      '*  '),
    puzzle(41,
      '  *',
      ' * ',
      '* *'),
    puzzle(42,
      '***',
      '***',
      ' **'),
    puzzle(43,
      '* *',
      ' * ',
      '** '),
    puzzle(44,
      '   ',
      '  *',
      ' * '),
    puzzle(45,
      ' **',
      '   ',
      '  *'),
    puzzle(46,
      '  *',
      ' **',
      '***'),
    puzzle(47,
      '* *',
      '*  ',
      ' * '),
    puzzle(48,
      '* *',
      '** ',
      '** '),
    puzzle(49,
      '   ',
      '*  ',
      '***'),
    puzzle(50,
      '* *',
      '   ',
      '* *')
  ]),
  "5": new Map([
    puzzle(51,
      ' **',
      '   ',
      '   '),
    puzzle(52,
      '  *',
      '* *',
      '* *'),
    puzzle(53,
      '  *',
      ' * ',
      '  *'),
    puzzle(54,
      '*  ',
      '  *',
      '   '),
    puzzle(55,
      '   ',
      '  *',
      '** '),
    puzzle(56,
      '** ',
      '***',
      '** '),
    puzzle(57,
      ' * ',
      ' * ',
      '* *'),
    puzzle(58,
      '** ',
      ' **',
      ' **'),
    puzzle(59,
      '  *',
      '***',
      '*  '),
    puzzle(60,
      '***',
      '***',
      '***'),
    puzzle(61,
      '* *',
      '* *',
      '*  '),
    puzzle(62,
      '  *',
      ' * ',
      ' **'),
    puzzle(63,
      '** ',
      ' **',
      '*  '),
    puzzle(64,
      '** ',
      '   ',
      '***'),
    puzzle(65,
      '*  ',
      '** ',
      '** '),
    puzzle(66,
      ' **',
      '*  ',
      '   '),
    puzzle(67,
      '   ',
      '  *',
      '*  '),
    puzzle(68,
      '***',
      '   ',
      '** '),
    puzzle(69,
      ' * ',
      ' **',
      '* *'),
    puzzle(70,
      ' **',
      '* *',
      '* *'),
    puzzle(71,
      '   ',
      ' * ',
      '   '),
    puzzle(72,
      '*  ',
      '   ',
      '   '),
    puzzle(73,
      ' * ',
      '* *',
      ' **'),
    puzzle(74,
      ' **',
      ' * ',
      '  *'),
    puzzle(75,
      '*  ',
      '  *',
      ' * '),
    puzzle(76,
      '** ',
      '   ',
      '   ')
  ]),
  "6": new Map([
    puzzle(77,
      '*  ',
      '** ',
      ' * '),
    puzzle(78,
      '   ',
      '** ',
      '*  '),
    puzzle(79,
      ' **',
      '   ',
      '*  '),
    puzzle(80,
      '*  ',
      '** ',
      '   '),
    puzzle(81,
      '***',
      '   ',
      ' * '),
    puzzle(82,
      '** ',
      ' * ',
      '***'),
    puzzle(83,
      ' * ',
      '***',
      '** '),
    puzzle(84,
      '  *',
      ' **',
      ' * '),
    puzzle(85,
      '* *',
      '***',
      '  *'),
    puzzle(86,
      '   ',
      '** ',
      '*  '),
    puzzle(87,
      '***',
      '*  ',
      ' * '),
    puzzle(88,
      '   ',
      '** ',
      ' **'),
    puzzle(89,
      '***',
      ' * ',
      ' **'),
    puzzle(90,
      '***',
      '** ',
      ' **'),
    puzzle(91,
      '   ',
      ' * ',
      '*  ')
  ]),
  "7": new Map([
    puzzle(92,
      '* *',
      '*  ',
      '*  '),
    puzzle(93,
      ' * ',
      ' * ',
      ' * '),
    puzzle(94,
      '***',
      '*  ',
      '*  '),
    puzzle(95,
      '  *',
      '** ',
      '** '),
    puzzle(96,
      ' **',
      ' **',
      ' **'),
    puzzle(97,
      '*  ',
      '*  ',
      '* *'),
    puzzle(98,
      '   ',
      '***',
      '* *'),
    puzzle(99,
      ' **',
      '***',
      '** '),
    puzzle(100,
      '* *',
      '   ',
      ' * ')
  ])
});